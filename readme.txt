Reproducing my application on Angular was overall a challenge. Before splitting my front end into separate components, i firsted tested to make sure that the html and css were working on the parent appcomponent. I had to make a lot of changes to the css from my lab 3 because they were not working properly on the angular application. Once I had that working I then split my front end into two components, an input and an output component. The input component holds the displays to the user a dropdown method for the 4 main methods we use, and a textbox to input a name of a pokemon or an id number. Once you fill out the textbocx and click on the pokeball, the page will switch views to the output component and display data about the input pokemon. The reset button and the container in which the pokedex is held is all in the parent component. The reset button allows you to go back to the input view when on the output view. Now that most of the functionality was working for the pokedex, I had to tackle how to make api calls from the angular application. After some time following the slides and some sources online, I was able to make my api calls and have my pokedex working. Due to the lack of time and also working on my midterm presentation, I wasn't able to get the error handling done that I wanted to.

https://stackoverflow.com/questions/49699067/property-has-no-initializer-and-is-not-definitely-assigned-in-the-construc
https://stackoverflow.com/questions/38974896/call-child-component-method-from-parent-class-angular
https://stackoverflow.com/questions/49589713/dynamically-assign-element-id-inside-ngfor
https://angular.io/guide/inputs-outputs
https://www.techiediaries.com/angular-9-ajax-get-and-post-requests-example/
https://www.cloudhadoop.com/angular-button-click-event-examples/